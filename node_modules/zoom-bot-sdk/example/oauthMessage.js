var express = require('express');
let http = require('http');
var bodyParser = require("body-parser");
let app = express();
app.use(express.static('./static'));
app.use(bodyParser.json());

const { oauth2, client, setting } = require('../development/index');
setting.setUrl('https://dev.zoom.us'); // if you are in projection,not use this.

let oauth2Client = oauth2( '6gU6hZ0xTsum6k1qaCYmDw', '784qQEnt7idUecnEIWx9ArBdocIBRV9C', 'http://localhost:3003/api/oauth' );
oauth2Client.on('tokens', function (tokens){});

let zoomBot = client('6gU6hZ0xTsum6k1qaCYmDw', 'pTzcaP9IQbiySlCDXmRDGQ', 'v1yj6l-rusq4mhvxdgyl0kzq@xmppdev.zoom.us', 'zoom').command([{ command: 'create', description: 'create a new meeting', hint: ' <userName> <date>' }]).defaultAuth(oauth2Client.connect());

let foxApp=null;//oauth app
zoomBot.on('commands', async function (event) {
    let {command} = event;
    if(foxApp===null){return;}
        try {
            let userInfo = await foxApp.getUser();
            let channelList = await foxApp.channelList(userInfo.id);
            if(channelList.length>0){
                let obj = channelList[1];
                let { group_jid } = obj;
                await foxApp.sendMessage({
                    to_jid: group_jid, account_id: userInfo.account_id,
                    body: { "type": "message", "text": `message from command ${command}` },
                    header: { text: 'fox reply' }
                });
            } 
        }
        catch (e) {
            console.log(e);
        }
});

app.all('/api/message', function (req, res) {//get message api
    let { body, headers } = req;
    zoomBot.handle({ body, headers }, function (err) {
        if (err) { console.log(err); }
        res.send('ok');
    });
});

app.get('/api/oauth', async function (req, res) {
    try {
        let connection = await oauth2Client.connectByCode(req.query.code);
        //change foxApp to current oauth2 user
        foxApp = zoomBot.create({ auth: connection });
        res.send('ok');
    } catch (e) {
        res.send(e);
    }
});

var server = http.createServer(app);
server.listen(3003, function () { console.log(`3003 is opened`); });

