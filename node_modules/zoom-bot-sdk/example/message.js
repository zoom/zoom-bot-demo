var express = require('express');
let http = require('http');
var bodyParser = require("body-parser");
let app = express();
app.use(express.static('./static'));
app.use(bodyParser.json());

const { oauth2, client, setting } = require('../development/index');
setting.setUrl('https://dev.zoom.us'); // if you are in projection,not use this.

let oauth2Client = oauth2(
  '6gU6hZ0xTsum6k1qaCYmDw',//client id
  '784qQEnt7idUecnEIWx9ArBdocIBRV9C',//client secret
  'http://localhost:3003/api/oauth'//redirect uri
);

//create zoomBot
let zoomBot = client(
  '6gU6hZ0xTsum6k1qaCYmDw',//client id
  'pTzcaP9IQbiySlCDXmRDGQ',//verify code
  'v1yj6l-rusq4mhvxdgyl0kzq@xmppdev.zoom.us',//jid
  'jira'
).commands([{ command: 'create', description: 'create a new meeting', hint:' <userName> <date>'}]).defaultAuth(oauth2Client.connect());

zoomBot.on('commands',function(e){
let {payload,data,type,command,message}=e;//origin message from IM is message
let { toJid: to_jid, accountId: account_id, name } = payload;
if(command==='create'){
  let text = type === 'group' ? `get message from group,will create meeting for ${data[0]} in ${data[1]}` : `get message from one to one,will create meeting for ${data[0]} in ${data[1]}`;
  //create a userApp and run 
  let foxApp = zoomBot.create({auth: oauth2Client.connect()});
  foxApp.sendMessage({to_jid, account_id, body: {type:'message',text}, header: { text: `reply from userName ${name}`}});
}
// else if(command==='delete'){//other command logic}
});

app.all('/api/message', function (req, res) {//get message api
  let { body, headers } = req;
  //i will add help,
  zoomBot.handle({ body, headers }, function (err) {
    if (err) { console.log(err); }
    res.send('ok');
  });
});

var server = http.createServer(app);
server.listen(3003, function () { console.log(`3003 is opened`); });

